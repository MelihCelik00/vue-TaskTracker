{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache) {\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_ctx.showAddTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AddTask, {\n    onAddTask: _ctx.addTask\n  }, null, 8\n  /* PROPS */\n  , [\"onAddTask\"])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Tasks, {\n    onToggleReminder: _ctx.toggleReminder,\n    onDeleteTask: _ctx.deleteTask,\n    tasks: _ctx.tasks\n  }, null, 8\n  /* PROPS */\n  , [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;;;;6DACeA,kCAAXC,oBAEI,KAFJ,EAEIC,UAFJ,EAEI,CADLC,aAA+BC,kBAA/B,EAA+B;IAArBC,SAAQ,EAAEL;EAAW,CAA/B,EAA2B,IAA3B,EAA2B;EAAA;EAA3B,EAA2B,aAA3B,CACK,CAFJ,wCAGFG,aAAoFG,gBAApF,EAAoF;IAA5EC,gBAAe,EAAEP,mBAA2D;IAA1CQ,YAAW,EAAER,eAA6B;IAAhBS,KAAK,EAAET;EAAS,CAApF;;EAAA","names":["_ctx","_createElementBlock","_hoisted_1","_createVNode","_component_AddTask","onAddTask","_component_Tasks","onToggleReminder","onDeleteTask","tasks"],"sourceRoot":"","sources":["/Users/melihsafacelik/vue-beraberbarin/src/views/Home.vue"],"sourcesContent":["<template>\n    <div v-if=\"showAddTask\">\n\t\t\t<AddTask @add-task=\"addTask\" />\n\t\t</div>\n\t\t<Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n</template>\n\n<script>\nimport Tasks from '../components/Tasks'\nimport AddTask from '../components/AddTask'\n\nexport default {\n    name: 'Home',\n    components:{\n        Tasks,\n        AddTask\n    },\n    data:{\n        tasks: []\n    },\n    methods: {\n        async addTask(task){\n\t\tconst res = await fetch('api/tasks', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type' : 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t})\n\n\t\tconst data = await res.json()\n\t\tthis.tasks = [...this.tasks, data]\n\t},\n\tasync deleteTask(id){\n\t\tif(confirm('Are you sure?')){\n\t\t\tconst res = await fetch(`api/tasks/${id}`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t})\n\n\t\t\tres.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id !== id)) : alert('Error deleting task')\n\n\t\t\tthis.tasks = this.tasks.filter((task)=> task.id !== id)\n\t\t}\n\t},\n\tasync toggleReminder(id){\n\t\tconst taskToToggle = await this.fetchTask(id)\n\t\tconst updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n\t\tconst res = await fetch(`api/tasks/${id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(updatedTask)\n\t\t})\n\n\t\tconst data = await res.json()\n\n\t\tthis.tasks = this.tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task)\n\t},\n\tasync fetchTasks() {\n\t\tconst res = await fetch('api/tasks');\n\t\tconst data = await res.json();\n\t\treturn data;\n\t},\n\tasync fetchTask(id) {\n\t\tconst res = await fetch(`api/tasks/${id}`)\n\t\tconst data = await res.json();\n\t\treturn data;\n\t}\n  },\n\tasync created() {\n\t\tthis.tasks = await this.fetchTasks();\n  }\n}\n    }\n}\n\n\n</script>"]},"metadata":{},"sourceType":"module"}