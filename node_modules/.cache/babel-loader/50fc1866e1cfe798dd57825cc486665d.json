{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    onToggleAddTask: $options.toggleAddTask,\n    title: \"Task Tracker\",\n    showAddTask: $data.showAddTask\n  }, null, 8\n  /* PROPS */\n  , [\"onToggleAddTask\", \"showAddTask\"]), $data.showAddTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8\n  /* PROPS */\n  , [\"onAddTask\"])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Tasks, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8\n  /* PROPS */\n  , [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])]);\n}","map":{"version":3,"mappings":";;EACMA,KAAK,EAAC;;;;;;;;;;;;uBAAXC,oBAMM,KANN,cAMM,CALLC,aAA2FC,iBAA3F,EAA2F;IAAlFC,eAAe,EAAEC,sBAAiE;IAAlDC,KAAK,EAAC,cAA4C;IAA5BC,WAAW,EAAEC;EAAe,CAA3F;;EAAA,qCAKK,EAJMA,mCAAXP,oBAEM,KAFN,EAEMQ,UAFN,EAEM,CADLP,aAA+BQ,kBAA/B,EAA+B;IAArBC,SAAQ,EAAEN;EAAW,CAA/B,EAA2B,IAA3B,EAA2B;EAAA;EAA3B,EAA2B,aAA3B,CACK,CAFN,sCAIK,EADLH,aAAoFU,gBAApF,EAAoF;IAA5EC,gBAAe,EAAER,uBAA2D;IAA1CS,YAAW,EAAET,mBAA6B;IAAhBU,KAAK,EAAEP;EAAS,CAApF;;EAAA,gDACK,CANN","names":["class","_createElementBlock","_createVNode","_component_Header","onToggleAddTask","$options","title","showAddTask","$data","_hoisted_2","_component_AddTask","onAddTask","_component_Tasks","onToggleReminder","onDeleteTask","tasks"],"sourceRoot":"","sources":["/Users/melihsafacelik/vue-beraberbarin/src/App.vue"],"sourcesContent":["<template>\n\t<div class=\"container\">\n\t\t<Header @toggle-add-task=\"toggleAddTask\" title=\"Task Tracker\" :showAddTask=\"showAddTask\" />\n\t\t<div v-if=\"showAddTask\">\n\t\t\t<AddTask @add-task=\"addTask\" />\n\t\t</div>\n\t\t<Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n\t</div>\n  \n</template>\n\n<script>\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nexport default {\n  name: 'App',\n  components: {\n    Header,\n\tTasks,\n\tAddTask,\n  },\n  data() {\n\treturn {\n\t\ttasks: [],\n\t\tshowAddTask: false\n\t}\n  },\n  methods:{\n\ttoggleAddTask(){\n\t\tthis.showAddTask = !this.showAddTask;\n\t},\n\tasync addTask(task){\n\t\tconst res = await fetch('api/tasks', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type' : 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t})\n\n\t\tconst data = await res.json()\n\t\tthis.tasks = [...this.tasks, data]\n\t},\n\tasync deleteTask(id){\n\t\tif(confirm('Are you sure?')){\n\t\t\tconst res = await fetch(`api/tasks/${id}`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t})\n\n\t\t\tres.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id !== id)) : alert('Error deleting task')\n\n\t\t\tthis.tasks = this.tasks.filter((task)=> task.id !== id)\n\t\t}\n\t},\n\ttoggleReminder(id){\n\t\tthis.tasks = this.tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task)\n\t},\n\tasync fetchTasks() {\n\t\tconst res = await fetch('api/tasks');\n\t\tconst data = await res.json();\n\t\treturn data;\n\t},\n\tasync fetchTask(id) {\n\t\tconst res = await fetch(`api/${id}`)\n\t\tconst data = await res.json();\n\t\treturn data;\n\t}\n  },\n\tasync created() {\n\t\tthis.tasks = await this.fetchTasks();\n  }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n.btn:focus {\n  outline: none;\n}\n.btn:active {\n  transform: scale(0.98);\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}